"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isValidUri = exports.validateUri = exports.validateNonEmptyString = exports.validateRecommended = exports.validateRequired = void 0;
const valid_url_1 = __importDefault(require("valid-url"));
const is_ipfs_1 = __importDefault(require("is-ipfs"));
const validateRequired = (meta) => (propertyName) => meta[propertyName] === undefined
    ? [`Error: Property '${propertyName}' is missing`]
    : [];
exports.validateRequired = validateRequired;
const validateRecommended = (meta) => (propertyName) => meta[propertyName] === undefined
    ? [`Warning: Property '${propertyName}' is missing, but recommended`]
    : [];
exports.validateRecommended = validateRecommended;
const validateNonEmptyString = (meta) => (propertyName) => {
    const value = meta[propertyName];
    if (value === undefined)
        return [];
    if (value.trim() === '')
        return [
            `Warning: Property "${propertyName}" has empty string value. Consider removing or provide a value for the property.`
        ];
    return [];
};
exports.validateNonEmptyString = validateNonEmptyString;
const validateUri = (meta) => (propertyName) => {
    const value = meta[propertyName];
    if (value === undefined)
        return [];
    if ((0, exports.isValidUri)(value))
        return [];
    return [
        `Error: URI format for "${propertyName}": "${value}" seems to be invalid`
    ];
};
exports.validateUri = validateUri;
const isValidUri = (uri) => {
    const parts = uri.split('://');
    const fullUri = parts.length == 1 ? 'http://' + uri : uri;
    if (valid_url_1.default.isWebUri(fullUri))
        return true;
    if (uri.startsWith('ipfs://')) {
        const ipfsPath = '/ipfs/' + parts[1];
        if (is_ipfs_1.default.ipfsPath(ipfsPath))
            return true;
    }
    return false;
};
exports.isValidUri = isValidUri;
//# sourceMappingURL=meta-validators.js.map