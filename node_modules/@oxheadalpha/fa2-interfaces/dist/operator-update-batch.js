"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.operatorUpdateBatch = void 0;
/**
 * A batch builder that can create operator updates the method
 * Fa2Contract.updateOperators. It can combine add & remove operator operations
 * into one batch like this:
 *
 * const batch = operatorUpdateBatch().
 *   .addOperator('tzOwner1', 'tzOperator1', 1)
 *   .removeOperator('tzOwner2, 'tzOperator2', 2)
 *   .addOperators([
 *     { owner: 'tzOwner3', operator: 'tzOperator3', token_id: 3 },
 *     { owner: 'tzOwner4', operator: 'tzOperator4', token_id: 4 }
 *   ])
 *   .updates;
 *
 * contract.updateOperators(batch);
 *
 * @param updates a list of either AddOperator or RemoveOperator
 * @returns a batch of updates that can be used in updateOperators
 */
const operatorUpdateBatch = (updates = []) => {
    const self = {
        updates,
        addOperator: (owner, operator, tokenId) => self.addOperators([{ owner, operator, token_id: tokenId }]),
        addOperators: (additions) => (0, exports.operatorUpdateBatch)(additions.reduce((a, u) => [...a, { add_operator: u }], updates)),
        removeOperator: (owner, operator, tokenId) => self.removeOperators([{ owner, operator, token_id: tokenId }]),
        removeOperators: (removals) => (0, exports.operatorUpdateBatch)(removals.reduce((a, u) => [...a, { remove_operator: u }], updates))
    };
    return self;
};
exports.operatorUpdateBatch = operatorUpdateBatch;
//# sourceMappingURL=operator-update-batch.js.map