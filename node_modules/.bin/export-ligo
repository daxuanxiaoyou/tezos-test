#!/usr/bin/env node
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const kleur = __importStar(require("kleur"));
const fs = __importStar(require("fs"));
const path = __importStar(require("path"));
const [, , destPath] = process.argv;
if (!destPath) {
    console.log(kleur.red('destination path argument is missing.'));
    process.exit(-1);
}
// if(!fs.existsSync(destPath)) {
//   console.log(kleur.red(`Export destination path ${destPath} does not exist.`));
//   process.exit(-1);
// }
const fullDestPath = path.isAbsolute(destPath)
    ? destPath
    : path.join(process.cwd(), destPath);
// __dirname is ./dist
const fullSrcPath = path.resolve(__dirname, '../ligo');
console.log(`Exporting Ligo library from ${fullSrcPath} to ${fullDestPath}`);
fs.cpSync(fullSrcPath, destPath, { recursive: true, errorOnExist: true });
console.log(kleur.green(`Ligo library exported to ${fullDestPath}`));
//# sourceMappingURL=export-ligo.js.map